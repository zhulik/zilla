# frozen_string_literal: true

# #Kubernetes
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: unversioned
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.5.0-SNAPSHOT
#

require 'cgi'

module Zilla
  class OpenidApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # get service account issuer OpenID JSON Web Key Set (contains public token verification keys)
    # @param [Hash] opts the optional parameters
    # @return [String]
    def get_service_account_issuer_open_id_keyset(opts = {})
      data, _status_code, _headers = get_service_account_issuer_open_id_keyset_with_http_info(opts)
      data
    end

    # get service account issuer OpenID JSON Web Key Set (contains public token verification keys)
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Integer, Hash)>] String data, response status code and response headers
    def get_service_account_issuer_open_id_keyset_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OpenidApi.get_service_account_issuer_open_id_keyset ...'
      end
      # resource path
      local_var_path = '/openid/v1/jwks/'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/jwk-set+json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'String'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerToken']

      new_options = opts.merge(
        operation: :'OpenidApi.get_service_account_issuer_open_id_keyset',
        header_params:,
        query_params:,
        form_params:,
        body: post_body,
        auth_names:,
        return_type:
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OpenidApi#get_service_account_issuer_open_id_keyset\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
